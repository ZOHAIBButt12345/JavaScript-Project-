// Tic Tac Toe Game

// Initialize the board
let board = [
  ['', '', ''],
  ['', '', ''],
  ['', '', '']
];

// Current player (X starts)
let currentPlayer = 'X';

// Function to display the board
function displayBoard() {
  console.log(board.map(row => row.join(' | ')).join('\n---------\n'));
}

// Function to check if a player has won
function checkWinner() {
  // Check rows, columns, and diagonals
  for (let i = 0; i < 3; i++) {
    if (board[i][0] === currentPlayer && board[i][1] === currentPlayer && board[i][2] === currentPlayer) {
      return true; // Row win
    }
    if (board[0][i] === currentPlayer && board[1][i] === currentPlayer && board[2][i] === currentPlayer) {
      return true; // Column win
    }
  }
  if (board[0][0] === currentPlayer && board[1][1] === currentPlayer && board[2][2] === currentPlayer) {
    return true; // Diagonal win (top-left to bottom-right)
  }
  if (board[0][2] === currentPlayer && board[1][1] === currentPlayer && board[2][0] === currentPlayer) {
    return true; // Diagonal win (top-right to bottom-left)
  }
  return false;
}

// Function to check if the board is full
function isBoardFull() {
  return board.every(row => row.every(cell => cell !== ''));
}

// Function to handle a player's move
function makeMove(row, col) {
  if (board[row][col] === '' && !checkWinner() && !isBoardFull()) {
    board[row][col] = currentPlayer;
    displayBoard();
    if (checkWinner()) {
      console.log(`Player ${currentPlayer} wins!`);
    } else if (isBoardFull()) {
      console.log("It's a draw!");
    } else {
      // Switch to the other player
      currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
    }
  } else {
    console.log('Invalid move. Try again.');
  }
}

// Example moves
makeMove(0, 0); // X's move
makeMove(1, 1); // O's move
makeMove(0, 1); // X's move
makeMove(1, 2); // O's move
makeMove(0, 2); // X's move